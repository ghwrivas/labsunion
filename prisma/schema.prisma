// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Todo {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  text      String
  completed Boolean
}

model Usuario {
  id                 Int      @id @default(autoincrement())
  nombre             String   @db.VarChar(45)
  apellido           String   @db.VarChar(45)
  fecha_nacimiento   DateTime @db.Date
  correo_electronico String   @unique @db.VarChar(45)
  role               Role     @default(ARBITRO)
  contrasenia        String   @db.VarChar(100)
  activo             Boolean  @default(false)
}

model Estadio {
  id                 Int      @id @default(autoincrement())
  nombre             String   @db.VarChar(45)
  activo             Boolean  @default(false)
  juegos             Juego[]
}

model CategoriaJuego {
  id      Int      @id @default(autoincrement())
  nombre  String   @db.VarChar(45)
  precio  Decimal  @db.Decimal(3,2)
  activo  Boolean  @default(false)
  juegos             Juego[]
}

model Periodo {
  id      Int      @id @default(autoincrement())
  anio    Int      @unique
  activo  Boolean  @default(false)
}

model Juego {
  id                     Int             @id @default(autoincrement())
  fecha                  DateTime        @db.Date
  hora                   DateTime        @db.Time()
  precio                 Decimal         @db.Decimal(3,2)
  estadioId              Int 
  estadio                Estadio         @relation(fields: [estadioId], references: [id])
  categoriaJuegoId       Int
  categoriaJuego         CategoriaJuego  @relation(fields: [categoriaJuegoId], references: [id])
  comentarios            String?         @db.VarChar(100)
  estatus                EstatusJuego    @default(PROGRAMADO)
}

enum Role {
  ARBITRO
  COORDINADOR
  PRESIDENTE
  TESORERO
  SECRETARIO
  ADMIN
}

enum EstatusJuego {
  PROGRAMADO
  REALIZADO
  SUSPENDIDO
  REALIZADO_SIN_PAGO
}

enum TipoMovimiento {
  PAGO_FINANZA
  CAPITAL_INICIAL
  GASTO
}